import java.awt.Color;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JPanel;

public class Chess {
	private static JButton[][] table; // to display the image , do not use this to judge !!!
	private static int[][] chess; // to store the color of this JButton
	public static JPanel Game_Table; // to contain the table
	private static int border = 20; // chess table size
	private static int countOfGame = 0;
	private int x,y,valueOfColor;
	Chess(){
		table=new JButton[border][border];
		chess=new int[border][border];
		Game_Table=new JPanel();
		Game_Table.setLayout(new GridLayout(border,border,1,1));
		for(int i=0;i<border;i++)
		{
			for(int j=0;j<border;j++)
			{
				table[i][j]=new JButton();
				table[i][j].setBackground(Color.white);
				chess[i][j]=-1;
				Game_Table.add(table[i][j]);
			}
		}
	}
	public int getChessX(){
		return this.x;
	}
	private void setChessX(int data){
		if(data>=0&&data<20)
		{
			this.x = data;
		}
		else
		{
			System.out.println("invaild x, the value of x is :"+ data);
		}
	}
	public int getChessY(){
		return this.y;
	}
	private void setChessY(int data){
		if(data>=0&&data<20)
		{
			this.y = data;
		}
		else
		{
			System.out.println("invaild y, the value of y is :"+ data);
		}
	}
	public int getValueOfColor(){
		return this.valueOfColor;
		// -1 	is white
		// 1 	is black
		// 2	is blue
	}
	private void setValueOfColor(Color data){
		if(data == Color.white){
			this.valueOfColor = -1;
		}
		else if(data == Color.black){
			this.valueOfColor = 1;
		}
		else if(data == Color.blue){
			this.valueOfColor = 2;
		}
		else
		{
			System.out.println("invaild color value ,the value of color is :"+ this.valueOfColor);
		}
	}
	public Color getColor(){
		switch(this.valueOfColor)
		{
		case(1):
		{
			return Color.BLACK; // is color of food
		}
		case(2):
		{
			return Color.BLUE; // is color of snake
		}
		case(-1):
		{
			return Color.WHITE; // is color of nothing
		}
		default:
		{
			System.out.println("error data, the data is: "+this.valueOfColor);
		}
		}
		return null;
	}
	// count of game ,i am not define its func,so later do it
	public int getCountOfGame(){
		return countOfGame;
	}
	public void setCountOfGame(int data){
		countOfGame = data;
	} 
	
	private void setIt(){
		table[x][y].setBackground(getColor());
		chess[x][y] = valueOfColor;
	}
	private void getIt(){
		this.valueOfColor = chess[x][y];
	}
	// other class only can use these function to set chess;
	public void setChessNodeColor(int x,int y,Color color){
		setChessX(x);
		setChessY(y);
		setValueOfColor(color);
		setIt();
	}
	public Color getChessNodeColor(int x,int y){
		setChessX(x);
		setChessY(y);
		getIt(); // set valueOfColor to chess[x][y]
		return getColor();
	}
}

// input coord 				Output Color 
// input coord and color	No output
